/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Transaction;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import org.springframework.web.bind.annotation.CrossOrigin;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-01-21T13:41:11.054+01:00")

@Api(value = "transaction", description = "the transaction API")
public interface TransactionApi {

    @CrossOrigin
    @ApiOperation(value = "Get all the transaction from a nickname", nickname = "transactionNicknameGet", notes = "", response = Transaction.class, responseContainer = "List", tags={ "Transaction", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Transaction.class, responseContainer = "List") })
    @RequestMapping(value = "/transaction/{nickname}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Transaction>> transactionNicknameGet(@ApiParam(value = "",required=true) @PathVariable("nickname") String nickname);

    @CrossOrigin
    @ApiOperation(value = "add a new transaction", nickname = "transactionPost", notes = "", response = Transaction.class, tags={ "Transaction", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Transaction.class) })
    @RequestMapping(value = "/transaction",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Transaction> transactionPost(@ApiParam(value = "transaction to add" ,required=true )  @Valid @RequestBody Transaction body);

}
